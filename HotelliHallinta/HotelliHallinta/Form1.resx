<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0gAAAABJRU5ErkJggg==
</value>
  </data>
</root>